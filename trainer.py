
import os
import glob
import sys

from tokenizerTrainer import stackTraceTokenizer
from dataLoader import stackTraceDataloader
from transformer import TorchTransformer

if __name__ == '__main__':

    BASE_DIR = os.path.dirname(os.path.realpath(__file__))
    os.chdir(BASE_DIR)

    ## Checks for the root directory in share
    if os.path.exists("Shared"):
        ROOT_DIR = os.path.join(BASE_DIR, "Shared")
        os.chdir(ROOT_DIR)
    else:
        print("directory //Shared does not exist, or incorrect base directory")
        sys.exit()

    for tokenizer, event in stackTraceTokenizer(tokens=('white','custom'), events=('Reg','File')):

        train_dl, val_dl = stackTraceDataloader(event=event, tokenizer=tokenizer)

        print(len(train_dl), len(val_dl))
