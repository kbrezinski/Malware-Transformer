
import torch
import numpy as np
from config import cfg

## setting the manual seed config
seed = cfg.SEED
if seed is not None:
    np.random.seed(seed)
    torch.manual_seed(seed)
    torch.cuda.manual_seed(seed)

## configuring GPU
gpus = cfg.GPUID
if len(gpus) == 1:
    torch.cuda.set_device(gpus[0])

torch.backends.cudnn.benchmark = True

## main function
if __name__ == '__main__':

    BASE_DIR = os.path.dirname(os.path.realpath(__file__))
    os.chdir(BASE_DIR)

    ## Checks for the root directory in share
    if os.path.exists("Shared"):
        ROOT_DIR = os.path.join(BASE_DIR, "Shared")
        os.chdir(ROOT_DIR)
    else:
        print("directory //Shared does not exist, or incorrect base directory")
        sys.exit()

    for tokenizer, event, norm in stackTraceTokenizer(
                            tokens=('white','custom'), events=('Reg','File')):

        train_dl, val_dl = stackTraceDataloader(event=event, tokenizer=tokenizer)
